/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
lexer grammar InternalKlangLexer;

@header {
package com.kaurel.klang.xtext.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

GAME_STARTED : 'GAME_STARTED';

Forever : 'forever';

Sprite : 'sprite';

False : 'false';

While : 'while';

Yield : 'yield';

True : 'true';

When : 'when';

And : 'and';

Not : 'not';

Var : 'var';

If : 'if';

Or : 'or';

ExclamationMark : '!';

LeftParenthesis : '(';

RightParenthesis : ')';

Asterisk : '*';

PlusSign : '+';

Comma : ',';

HyphenMinus : '-';

Solidus : '/';

LessThanSign : '<';

EqualsSign : '=';

GreaterThanSign : '>';

// Rules duplicated to allow inter-rule references

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_NUMERIC : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
